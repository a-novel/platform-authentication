# https://github.com/containers/podman-compose
#
# This is a generic podman-compose file for the Agora application. You may disable or enable services as needed by
# commenting out the respective sections.
services:
  # ====================================================================================================================
  # DATABASES
  # ====================================================================================================================

  json-keys-postgres:
    image: ghcr.io/a-novel/service-json-keys/database:v1.3.0
    networks:
      - api
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: json-keys
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth=scram-sha-256
    volumes:
      - json-keys-postgres-data:/var/lib/postgresql/data/

  authentication-postgres:
    image: ghcr.io/a-novel/service-authentication/database:v1.2.4
    networks:
      - api
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: authentication
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth=scram-sha-256
    volumes:
      - authentication-postgres-data:/var/lib/postgresql/data/

  # ====================================================================================================================
  # SERVICES
  # ====================================================================================================================

  json-keys-service:
    image: ghcr.io/a-novel/service-json-keys/standalone:v1.3.0
    depends_on:
      json-keys-postgres:
        condition: service_started
    environment:
      POSTGRES_DSN: postgres://postgres:postgres@json-keys-postgres:5432/json-keys?sslmode=disable
      APP_MASTER_KEY: fec0681a2f57242211c559ca347721766f8a3acd8ed2e63b36b3768051c702ca
    networks:
      - api

  authentication-service:
    image: ghcr.io/a-novel/service-authentication/standalone:v1.2.4
    depends_on:
      authentication-postgres:
        condition: service_started
      json-keys-service:
        condition: service_started
    ports:
      - "${SERVICE_AUTH_PORT}:8080"
    environment:
      POSTGRES_DSN: postgres://postgres:postgres@authentication-postgres:5432/authentication?sslmode=disable
      JSON_KEYS_SERVICE_URL: http://json-keys-service:8080/v1
      AUTH_PLATFORM_URL: ${AUTH_PLATFORM_URL}
      SMTP_SENDER_DOMAIN: ${SMTP_SENDER_DOMAIN}
      SMTP_ADDR: ${SMTP_ADDR}
      SMTP_SENDER_NAME: ${SMTP_SENDER_NAME}
      SMTP_SENDER_EMAIL: ${SMTP_SENDER_EMAIL}
      SMTP_SENDER_PASSWORD: ${SMTP_SENDER_PASSWORD}
      DEBUG: true
    networks:
      - api

networks:
  api:
    driver: bridge

volumes:
  json-keys-postgres-data:
  authentication-postgres-data:
  story-schematics-postgres-data:
